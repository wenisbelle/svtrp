<?xml version="1.0"?> 
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="gazebo_essentials" > 


  <xacro:macro name="driver" params="">
<!-- JOINT PUBLISHER -->
  <gazebo>
    <plugin name="robot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
          <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>

      <joint_name>front_left_wheel_joint</joint_name>
      <joint_name>front_right_wheel_joint</joint_name>
      <joint_name>rear_left_wheel_joint</joint_name>
      <joint_name>rear_right_wheel_joint</joint_name>
      
    </plugin>
  </gazebo>

  <!-- Differential drive -->
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(find robot_description)/config/diff_drive_controller_config.yaml</parameters>
    </plugin>
  </gazebo>
</xacro:macro>

	 <!-- Front camera -->

    <gazebo reference="front_camera_link">
        <sensor name="front_camera" type="camera">
          <camera>
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
            </image>
          </camera>
          <plugin name="front_camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>base/front_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
          </plugin>
        </sensor>
    </gazebo>
  
	 <!-- Rear camera -->

    <gazebo reference="rear_camera_link">
        <sensor name="rear_camera" type="camera">
          <camera>
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
            </image>
          </camera>
          <plugin name="rear_camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>base/rear_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
          </plugin>
        </sensor>
    </gazebo>


  	 <!-- Left camera -->

    <gazebo reference="left_camera_link">
        <sensor name="left_camera" type="camera">
          <camera>
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
            </image>
          </camera>
          <plugin name="left_camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>base/left_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
          </plugin>
        </sensor>
    </gazebo>

 
	 <!-- Right camera -->

    <gazebo reference="right_camera_link">
        <sensor name="right_camera" type="camera">
          <camera>
            <horizontal_fov>1.46608</horizontal_fov>
            <image>
              <width>320</width>
              <height>240</height>
              <format>R8G8B8</format>
            </image>
          </camera>
          <plugin name="right_camera_controller" filename="libgazebo_ros_camera.so">
            <cameraName>base/right_camera</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>rgb_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
          </plugin>
        </sensor>
    </gazebo>

        <!-- Depth Camera -->
  <gazebo reference="front_camera_link">
     <sensor type="depth" name="depth_camera">
      <always_on>true</always_on>
      <camera>
          <horizontal_fov>1.3439</horizontal_fov>
          <image>
              <width>1920</width>
              <height>1080</height>
              <format>R8G8B8</format>
          </image>
          <depth_camera></depth_camera>
          <clip>
              <near>0.03</near>
              <far>8</far>
          </clip>
      </camera>
      
      <plugin name="intel_realsense_d430_depth_driver" filename="libgazebo_ros_camera.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <cameraName>depth_camera</cameraName>
        <frameName>camera_depth_link</frameName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
        <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>0.4</pointCloudCutoff>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        <CxPrime>0.0</CxPrime>
        <Cx>0.0</Cx>
        <Cy>0.0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>
    
  <!-- hokuyo -->
 
  <!-- Sensors -->

  <gazebo reference="front_hokuyo">
    <sensor name="sensor_ray" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>200</samples>
              <resolution>1.0</resolution>
              <min_angle>-3.14</min_angle>
              <max_angle>3.14</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>5.0</max>
          </range>
        </ray>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>100.0</update_rate>
        <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <namespace></namespace>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
      </sensor>
	</gazebo>
  
  <!-- POINT CLOUND SENSOR -->


  <gazebo reference="pointcloud_link">
      <sensor type="ray" name="pointcloud_sensor">
          <ray>
          <scan>
              <horizontal>
                  <samples>50</samples>
                  <resolution>1.0</resolution>
                  <min_angle>-1.0</min_angle>
                  <max_angle>1.0</max_angle>
              </horizontal>
              <vertical>
                  <samples>50</samples>
                  <resolution>1.0</resolution>
                  <min_angle>-1.0</min_angle>
                  <max_angle>1.0</max_angle>
              </vertical>
          </scan>
          <range>
              <min>0.10</min>
              <max>5.0</max>
              <resolution>0.01</resolution>
          </range>
          <!-- Using gazebo's noise instead of plugin's -->
          <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.01</stddev>
          </noise>
          </ray>
          <!-- Using gazebo's update rate instead of plugin's -->
          <update_rate>30</update_rate>
          <plugin name="gazebo_ros_block_laser_controller" filename="libgazebo_ros_ray_sensor.so">
          <!-- Change namespace and output topic so published topic is /rrbot/laser/pointcloud -->
          <ros>
              <namespace>pointcloud_svtrp</namespace>
              <argument>~/out:=pointcloud</argument>
          </ros>
          <!-- Set output to sensor_msgs/PointCloud to get same output type as gazebo_ros_block_laser -->
          <output_type>sensor_msgs/PointCloud</output_type>
          <frame_name>pointcloud_link</frame_name>

          <!-- min_intensity instead of hokuyoMinIntensity -->
          <min_intensity>100.0</min_intensity>
          </plugin>
      </sensor>
  </gazebo>

    <!-- IMU SENSOR -->
    <gazebo reference="base_IMU_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>base_IMU_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>ibase_IMU_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
        <ros>
            <namespace></namespace>
            <remapping>~/out:=imu</remapping>
          </ros>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>


  <!-- GPS SENSOR -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
        <always_on>true</always_on>
        <update_rate>1.0</update_rate>
        <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
            <ros>
                <!-- <namespace>/br</namespace> -->
                <remapping>gps_controller/out:=gps</remapping>
            </ros>
            <frame_name>gps_link</frame_name>
        </plugin>
    </sensor>
    <material>Gazebo/Grey</material>
</gazebo>


</robot>
